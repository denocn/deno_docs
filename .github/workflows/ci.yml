name: ci

on: [push, pull_request]

jobs:
  deno:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Deno
        uses: denoland/setup-deno@v1

      - name: Format
        run: deno fmt --check

<<<<<<< HEAD
=======
  type-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Deno
        uses: denoland/setup-deno@v1.0.0

>>>>>>> 0bd9bb8ec404ca5f4e983086a5b8fe2b65d590f5
      - name: Type-check Deno manual
        run: deno test --doc --unstable --import-map=.github/import_map.json --no-check=remote

      - name: Build
        run: deno task build

      - name: Deploy
        uses: appleboy/scp-action@master
        if: |
          startsWith(matrix.os, 'ubuntu') &&
          startsWith(github.repository, 'denocn') &&
          github.ref == 'refs/heads/main'
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          source: "dist/"
          target: "/var/www/manual.deno.js.cn/"
          strip_components: 1
